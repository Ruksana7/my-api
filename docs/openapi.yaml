openapi: 3.0.3
info:
  title: My API
  version: 1.0.0
servers:
  - url: http://localhost:4000
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /auth/signup:
    post:
      summary: Sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string, minLength: 6 }
      responses:
        '201':
          description: Created
  /auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string }
      responses:
        '200':
          description: OK
  /api/todos:
    get:
      summary: List todos
      parameters:
        - in: query
          name: page
          schema: { type: integer, default: 1 }
        - in: query
          name: limit
          schema: { type: integer, default: 10 }
        - in: query
          name: search
          schema: { type: string }
        - in: query
          name: sort
          schema: { type: string, enum: [created_at, priority], default: created_at }
        - in: query
          name: order
          schema: { type: string, enum: [asc, desc], default: desc }
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: OK
    post:
      summary: Create todo
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title: { type: string }
                done: { type: boolean }
                priority: { type: integer, enum: [1,2,3] }
      responses:
        '201':
          description: Created
  /api/todos/{id}:
    get:
      summary: Get todo by id
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    patch:
      summary: Update todo
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                done: { type: boolean }
                priority: { type: integer, enum: [1,2,3] }
      responses:
        '200': { description: OK }
        '400': { description: Bad request }
        '404': { description: Not found }
    delete:
      summary: Delete todo
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
